{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/implement/server-side/on-device-decisioning.md"],"names":["name","_frontmatter","Media","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","slots","isMDXComponent"],"mappings":"4OAUsBA,E,wEAFTC,EAAe,GAOtBC,GALgBF,EAKM,QALE,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,KAIZG,EAAc,CAClBL,gBAEIM,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,yBADR,0BAGA,yRACA,gDAAiC,cAAGC,WAAW,IAC3C,KAAQ,wGADqB,yCAAjC,YAE8D,eAAIA,WAAW,MAAI,cAAGA,WAAW,KACzF,KAAQ,6CADmE,oCAFjF,MAKA,eACE,GAAM,2FADR,6FAGA,ySACA,6RACA,SAACV,EAAD,CAAOW,MAAM,QAAQF,QAAQ,WAC7B,mBAAG,cAAGC,WAAW,IACb,KAAQ,uCADT,yCAGH,eACE,GAAM,kBADR,mBAGA,sGACA,eACE,GAAM,uDADR,0DAGA,iaACA,oBACE,eAAIA,WAAW,MAAf,wFACA,eAAIA,WAAW,MAAf,4CAAgE,cAAGA,WAAW,KAC1E,KAAQ,sHADoD,yBAAhE,mEAGA,eAAIA,WAAW,MAAf,6QAAiS,cAAGA,WAAW,KAC3S,KAAQ,0BADqR,kDAAjS,8CAGA,eAAIA,WAAW,MAAf,6RAEF,eACE,GAAM,oDADR,uDAGA,yQAA0P,uBAAYA,WAAW,KAAvB,eAA1P,uGAAwZ,uBAAYA,WAAW,KAAvB,eAAxZ,oBAAme,uBAAYA,WAAW,KAAvB,qBAAne,QAAwiB,uBAAYA,WAAW,KAAvB,aAAxiB,mFACA,oBACE,eAAIA,WAAW,MAAf,0BAA8C,uBAAYA,WAAW,MAAvB,eAA9C,UAAgH,uBAAYA,WAAW,MAAvB,qBAAhH,QAAsL,uBAAYA,WAAW,MAAvB,aAAtL,8ZAA0oB,cAAGA,WAAW,KACppB,KAAQ,6BAD8nB,sCAA1oB,sCAIF,eACE,GAAM,kCADR,oCAGA,qGACA,2CACA,oBACE,eAAIA,WAAW,MAAf,yGACA,eAAIA,WAAW,MAAf,+DACA,eAAIA,WAAW,MAAf,8FACA,eAAIA,WAAW,MAAf,kGACA,eAAIA,WAAW,MAAf,uCAEF,SAACV,EAAD,CAAOW,MAAM,QAAQF,QAAQ,WAC7B,mBAAG,cAAGC,WAAW,IACb,KAAQ,uCADT,yCAGH,6DAA8C,cAAGA,WAAW,IACxD,KAAQ,gFADkC,0BAA9C,YAGA,eACE,GAAM,sIADR,0IAGA,mBAAG,cAAGA,WAAW,IACb,KAAQ,0IADT,sCAAH,MAGA,eACE,GAAM,iIADR,sIAGA,mBAAG,cAAGA,WAAW,IACb,KAAQ,8IADT,sCAAH,MAOJH,EAAWK,gBAAiB","file":"component---src-pages-implement-server-side-on-device-decisioning-md-cb000fa1ca96192db50b.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/target-developers/target-developers/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Media = makeShortcode(\"Media\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"on-device-decisioning\"\n    }}>{`On-device decisioning`}</h1>\n    <p>{`On-Device Decisioning provides the ability to cache your Adobe Target A/B Test and Experience Targeting (XT) activities on your server and perform in-memory decisioning at near-zero latency, without blocking network requests to the Adobe Target Edge Network.`}</p>\n    <p>{`For more information, see `}<a parentName=\"p\" {...{\n        \"href\": \"https://adobetarget-sdks.gitbook.io/docs/on-device-decisioning/introduction-to-on-device-decisioning\"\n      }}>{`Introduction to on-device decisioning`}</a>{` in the `}<em parentName=\"p\"><a parentName=\"em\" {...{\n          \"href\": \"https://adobetarget-sdks.gitbook.io/docs/\"\n        }}>{`Adobe Target SDKs documentation`}</a></em>{`.`}</p>\n    <h2 {...{\n      \"id\": \"webinar-personalize-and-test-at-zero-latency-with-on-device-decisions-from-adobe-target\"\n    }}>{`Webinar: Personalize and test at zero latency with on-device decisions from Adobe Target`}</h2>\n    <p>{`More than ever, marketers, product owners and developers are being tasked with optimizing the overall customer experience on sites, in apps, and everywhere else they connect with their customers. Multiple tools with data silos and complicated implementations are inadequate.`}</p>\n    <p>{`In this recorded webinar, Adobe Target product experts discuss how moving critical experience optimization decisions on-device to execute locally with near-zero latency can open doors to exciting new use cases while improving site performance for your customers.`}</p>\n    <Media slots=\"video\" mdxType=\"Media\" />\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://video.tv.adobe.com/v/328148\"\n      }}>{`https://video.tv.adobe.com/v/328148`}</a></p>\n    <h2 {...{\n      \"id\": \"best-practices\"\n    }}>{`Best practices`}</h2>\n    <p>{`Adobe recommends the following best practices when using on-device decisioning:`}</p>\n    <h3 {...{\n      \"id\": \"best-practices-when-decisioning-method-is-on-device\"\n    }}>{`Best practices when decisioning method is \"on-device\"`}</h3>\n    <p>{`When using \"on-device\" as the decisioning method, the artifact is downloaded when the visitor loads the webpage for the first time. Any activity qualification that needs to happen on the first page load (no cache) happens only after the artifact is fully downloaded. There are certain best practices you can follow to ensure that activity qualifications happen fast for a new anonymous visitor.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Deactivate \"On-Device\" capable activities that are not meant to be in the artifact.`}</li>\n      <li parentName=\"ul\">{`If you have Target Premium, you can use `}<a parentName=\"li\" {...{\n          \"href\": \"https://experienceleague.corp.adobe.com/docs/target/using/administer/manage-users/enterprise/property-channel.html\"\n        }}>{`properties/workspaces`}</a>{` to create different artifacts files for different workspaces.`}</li>\n      <li parentName=\"ul\">{`If your artifact files becomes very large due to legitimate reasons, you can use the \"hybrid\" decisioning method. This method allows you to download the artifact in parallel and all Target API calls go over the wire until the artifact has downloaded. Read the best `}<a parentName=\"li\" {...{\n          \"href\": \"#best-practices-hybrid\"\n        }}>{`practices section on \"Hybrid\" decisioning mode`}</a>{` below to learn more about this approach.`}</li>\n      <li parentName=\"ul\">{`If you have a Single Page Application (SPA), Adobe recommends that you load and initialize at.js before loading your application's main JavaScript file during first page load. This approach initiates the artifact downloading much earlier, providing a faster experience rendering.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"best-practices-when-decisioning-method-is-hybrid\"\n    }}>{`Best practices when decisioning method is \"hybrid\"`}</h3>\n    <p>{`When using \"hybrid\" as the decisioning method, the artifact is downloaded in parallel. Until the artifact is downloaded, any Target API calls go over the wire even if the \"locations\" are on-device capable. This behavior is the default for all `}<inlineCode parentName=\"p\">{`getOffers()`}</inlineCode>{` calls and provides the best performance in most situations. If you change the default behavior of `}<inlineCode parentName=\"p\">{`getOffers()`}</inlineCode>{` by setting the `}<inlineCode parentName=\"p\">{`decisioningMethod`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`on-device`}</inlineCode>{`, follow these best practices to avoid errors and ensure the best performance.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`If you decide to call `}<inlineCode parentName=\"li\">{`getOffers()`}</inlineCode>{` with `}<inlineCode parentName=\"li\">{`decisioningMethod`}</inlineCode>{` as `}<inlineCode parentName=\"li\">{`on-device`}</inlineCode>{` when the page loads for the first time, you must do so inside the \"ARTIFACT_DOWNLOAD_SUCCEEDED\" at.js event handler to avoid errors. If your artifact is very large, any \"locations\" using this approach are rendered only after the artifact is fully downloaded, which can delay experience rendering. Adobe recommends that you rarely use this approach. Follow the best practices to reduce artifact size under the `}<a parentName=\"li\" {...{\n          \"href\": \"#best-practices-on-device\"\n        }}>{`\"On Device\" best practices section`}</a>{` above when using this approach.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"tutorial-on-device-decisioning\"\n    }}>{`Tutorial: On-device decisioning`}</h2>\n    <p>{`Adobe Target on-device decisioning enables near-zero latency content delivery.`}</p>\n    <p>{`This 7-minute video:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Describes on-device decisioning, including how it compares to other methods of Target implementation`}</li>\n      <li parentName=\"ul\">{`Demonstrates how to enable on-device decisioning in Target`}</li>\n      <li parentName=\"ul\">{`Examines a sample form-based composer activity that has been configured with JSON content`}</li>\n      <li parentName=\"ul\">{`Shows sample Node.JS SDK code containing key configuration required for on-device decisioning`}</li>\n      <li parentName=\"ul\">{`Demonstrates results in a browser`}</li>\n    </ul>\n    <Media slots=\"video\" mdxType=\"Media\" />\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://video.tv.adobe.com/v/329032\"\n      }}>{`https://video.tv.adobe.com/v/329032`}</a></p>\n    <p>{`For more videos and tutorials, see the `}<a parentName=\"p\" {...{\n        \"href\": \"https://experienceleague.adobe.com/docs/target-learn/tutorials/overview.html\"\n      }}>{`Adobe Target Tutorials`}</a>{` guide.`}</p>\n    <h2 {...{\n      \"id\": \"adobe-tech-blog---part-1-run-adobe-target-nodejs-sdk-for-experimentation-and-personalization-on-edge-platforms-akamai-edge-workers\"\n    }}>{`Adobe Tech Blog - Part 1: Run Adobe Target NodeJS SDK for experimentation and personalization on edge platforms (Akamai Edge Workers)`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://medium.com/adobetech/part-1-run-adobe-target-nodejs-sdk-for-experimentation-and-personalization-on-edge-platforms-4d8660964ed9\"\n      }}>{`Click here to access the blog post`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"adobe-tech-blog---part-2-run-adobe-target-nodejs-sdk-for-experimentation-and-personalization-on-edge-platforms-aws-lambdaedge\"\n    }}>{`Adobe Tech Blog - Part 2: Run Adobe Target NodeJS SDK for experimentation and personalization on edge platforms (AWS Lambda@Edge)`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://medium.com/adobetech/part-2-run-adobe-target-nodejs-sdk-for-experimentation-and-personalization-on-edge-platforms-aws-4d6bdac24563\"\n      }}>{`Click here to access the blog post`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}