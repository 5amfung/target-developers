{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/sdk-guides/on-device-decisioning/manage-rollouts-for-feature-tests.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-sdk-guides-on-device-decisioning-manage-rollouts-for-feature-tests-md-d9a86721613a6f690acc.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/target-developers/target-developers/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"manage-rollouts-for-feature-tests\"\n    }}>{`Manage rollouts for feature tests`}</h1>\n    <h2 {...{\n      \"id\": \"summary-of-steps\"\n    }}>{`Summary of steps`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Enable On-Device Decisioning for your organization`}</li>\n      <li parentName=\"ol\">{`Create an A/B activity`}</li>\n      <li parentName=\"ol\">{`Define your feature and rollout settings`}</li>\n      <li parentName=\"ol\">{`Implement and render the feature in your application`}</li>\n      <li parentName=\"ol\">{`Implement tracking for events in your application`}</li>\n      <li parentName=\"ol\">{`Activate your A/B activity`}</li>\n      <li parentName=\"ol\">{`Adjust rollout and traffic allocation as needed`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"enable-on-device-decisioning-for-your-organization\"\n    }}>{`Enable On-Device Decisioning for your organization`}</h2>\n    <p>{`Enabling on-device decisioning ensures an A/B activity is executed at near-zero latency. To enable this feature, navigate to `}<strong parentName=\"p\">{`Administration`}</strong>{` > `}<strong parentName=\"p\">{`Implementation`}</strong>{` > `}<strong parentName=\"p\">{`Account details`}</strong>{` in Adobe Target, and enable the `}<strong parentName=\"p\">{`On-Device Decisioning`}</strong>{` toggle.`}</p>\n    <p><em parentName=\"p\">{`Insert image-odd4.png`}</em></p>\n    <p><strong parentName=\"p\">{`NOTE`}</strong>{`: You must have the Admin or Approver `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.adobe.com/content/help/en/target/using/administer/manage-users/user-management.html\"\n      }}>{`user role`}</a>{`{target=_blank} to enable or disable the On-Device Decisioning toggle.`}</p>\n    <p>{`After enabling the On-Device Decisioning toggle, Adobe Target begins generating `}<em parentName=\"p\">{`rule artifacts`}</em>{` for your client.`}</p>\n    <h2 {...{\n      \"id\": \"create-an-ab-activity\"\n    }}>{`Create an A/B activity`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In Adobe Target, navigate to the `}<strong parentName=\"p\">{`Activities`}</strong>{` page, then select `}<strong parentName=\"p\">{`Create Activity`}</strong>{` > `}<strong parentName=\"p\">{`A/B test`}</strong>{`.`}</p>\n        <p parentName=\"li\"><em parentName=\"p\">{`Insert image-ab.png`}</em></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In the `}<strong parentName=\"p\">{`Create A/B Test Activity`}</strong>{` modal, leave the default `}<strong parentName=\"p\">{`Web`}</strong>{` option selected (1), select `}<strong parentName=\"p\">{`Form`}</strong>{` as your experience composer (2), select `}<strong parentName=\"p\">{`Default Workspace`}</strong>{` with `}<strong parentName=\"p\">{`No Property Restrictions`}</strong>{` (3), and click `}<strong parentName=\"p\">{`Next`}</strong>{` (4).`}</p>\n        <p parentName=\"li\"><em parentName=\"p\">{`Insert image-form.png`}</em></p>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"define-your-feature-and-rollout-settings\"\n    }}>{`Define your feature and rollout settings`}</h2>\n    <p>{`In the `}<strong parentName=\"p\">{`Experiences`}</strong>{` step of activity creation, provide a name for your activity (1). Enter the name of the location (2) within your application where you want to manage rollouts for your feature. For example,  `}<inlineCode parentName=\"p\">{`ondevice-rollout`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`homepage-addtocart-rollout`}</inlineCode>{` are location names indicating the destinations for managing feature rollouts. In the example shown below, `}<inlineCode parentName=\"p\">{`ondevice-rollout`}</inlineCode>{` is the location defined for Experience A. You can optionally add Audience refinements (4) to restrict qualification to the activity.`}</p>\n    <p><em parentName=\"p\">{`Insert image-location-rollout.png`}</em></p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In the `}<strong parentName=\"p\">{`Content`}</strong>{` section on the same page, select `}<strong parentName=\"p\">{`Create JSON Offer`}</strong>{` in the drop-down (1) as shown.`}</p>\n        <p parentName=\"li\"><em parentName=\"p\">{`Insert image-offer.png`}</em></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In the `}<strong parentName=\"p\">{`JSON Data`}</strong>{` text box that appears, enter the feature flag variable for the feature you intend to roll out with this activity in Experience A (1), using a valid JSON object (2).`}</p>\n        <p parentName=\"li\"><em parentName=\"p\">{`Insert image-json_a_rollout`}</em></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Click `}<strong parentName=\"p\">{`Next`}</strong>{` (1) to advance to the `}<strong parentName=\"p\">{`Targeting`}</strong>{` step of activity creation.`}</p>\n        <p parentName=\"li\"><em parentName=\"p\">{`Insert image-next_2_t_rollout`}</em></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In the `}<strong parentName=\"p\">{`Targeting`}</strong>{` step, keep the `}<strong parentName=\"p\">{`All Visitors`}</strong>{` audience (1), for simplicity. But adjust the traffic allocation (2) to 10%. This will restrict the feature to only 10% of your site visitors. Click Next (3) to advance to the `}<strong parentName=\"p\">{`Goals & Settings`}</strong>{` step.`}</p>\n        <p parentName=\"li\"><em parentName=\"p\">{`Insert image-next_2_g_rollout.png.`}</em></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In the `}<strong parentName=\"p\">{`Goals & Settings`}</strong>{` step, choose `}<strong parentName=\"p\">{`Adobe Target`}</strong>{` (1) as the `}<strong parentName=\"p\">{`Reporting Source`}</strong>{` to view your activity results in the Adobe Target UI.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Choose a `}<strong parentName=\"p\">{`Goal Metric`}</strong>{` to measure the activity. In this example, a successful conversion is based on whether the user purchases an item, as indicated by whether the user reached the orderConfirm (2) location.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Click `}<strong parentName=\"p\">{`Save & Close`}</strong>{` (3) to save the activity.`}</p>\n        <p parentName=\"li\"><em parentName=\"p\">{`Insert image-conv_rollout.png.`}</em></p>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"implement-and-render-the-feature-in-your-application\"\n    }}>{`Implement and render the feature in your application`}</h2>\n    <p><strong parentName=\"p\">{`Node.js`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`targetClient.getAttributes([\"ondevice-rollout\"]).then(function(attributes) {\n      const featureFlags = attributes.asObject(\"ondevice-rollout\");\n\n      // Your flag variables are now available in the featureFlags object variable.\n      //If you failed to qualify for the Activity, you will have an empty object.\n      console.log(featureFlags);\n    });\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Java`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`    Attributes attrs = targetJavaClient.getAttributes(targetDeliveryRequest, \"ondevice-rollout\");\n    Map<String, Object> featureFlags = attrs.toMboxMap(\"ondevice-rollout\");\n​\n    // Your flag variables are now available in the featureFlags object variable.\n    //If you failed to qualify for the Activity, you will have an empty object.\n    System.out.println(featureFlags);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"implement-tracking-for-events-in-your-application\"\n    }}>{`Implement tracking for events in your application`}</h2>\n    <p>{`After making the feature flag variable available in the application, you can use it enable any feature that is already part of your application. If a visitor does not qualify for the activity, it means they were not included as part of the 10% bucket defined as the audience.`}</p>\n    <p><strong parentName=\"p\">{`Node.js`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`//... Code removed for brevity\n\nif(featureFlags.enable == \"yes\") { //Fell within 10% traffic\n    console.log(\"Render Feature\");\n}\nelse {\n    console.log(\"Disable Feature\");\n}\n\n// alternatively, the getValue method could be used on the Attributes object.\n\nif(attributes.getValue(\"ondevice-rollout\", \"enable\") === \"yes\") { //Fell within 10% traffic\n    console.log(\"Render Feature\");\n}\nelse {\n    console.log(\"Disable Feature\");\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Java`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`//... Code removed for brevity\n​\nif(\"yes\".equals(String.valueOf(featureFlags.get(\"enable\")))) { //Fell within 10% traffic\n    System.out.println(\"Render Feature\");\n}\nelse {\n    System.out.println(\"Disable Feature\");\n}\n​\n// alternatively, the getString method could be used on the Attributes object.\n​\nif(\"yes\".equals(attrs.getString(\"ondevice-rollout\", \"enable\"))) { //Fell within 10% traffic\n    System.out.println(\"Render Feature\");\n}\nelse {\n    System.out.println(\"Disable Feature\");\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"activate-your-rollout-activity\"\n    }}>{`Activate your rollout activity`}</h2>\n    <p>{`*Insert image-activate_rollout.png\"`}</p>\n    <h2 {...{\n      \"id\": \"adjust-rollout-and-traffic-allocation-as-needed\"\n    }}>{`Adjust rollout and traffic allocation as needed`}</h2>\n    <p>{`Once you have activated your activity, edit it any time to increase or decrease the traffic allocation as needed.`}</p>\n    <p>{`Increasing the traffic allocation from 10% to 50% due to the success of the initial rollout.`}</p>\n    <p><em parentName=\"p\">{`Insert image-adjust_rollout.png`}</em></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}