{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/sdk-guides/troubleshooting/index.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-sdk-guides-troubleshooting-index-md-ea56cef87d752475c30b.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/target-developers/target-developers/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"troubleshooting\"\n    }}>{`Troubleshooting`}</h1>\n    <h2 {...{\n      \"id\": \"validating-configuration\"\n    }}>{`Validating Configuration`}</h2>\n    <h3 {...{\n      \"id\": \"summary-of-steps\"\n    }}>{`Summary of Steps`}</h3>\n    <ol>\n      <li parentName=\"ol\">{`Ensure the `}<inlineCode parentName=\"li\">{`logger`}</inlineCode>{` is configured`}</li>\n      <li parentName=\"ol\">{`Ensure Target Traces is enabled`}</li>\n      <li parentName=\"ol\">{`Verify the on-device decisioning `}<em parentName=\"li\">{`rule artifact`}</em>{` has been retrieved and cached according to the polling interval defined.`}</li>\n      <li parentName=\"ol\">{`Validate content delivery via the cached rule artifact by creating a test on-device decisioning activity through the form-based experience composer.`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"ensure-the-logger-is-configured\"\n    }}>{`Ensure the logger is configured`}</h2>\n    <p>{`When initializing the SDK, ensure that you enable logging.`}</p>\n    <p><strong parentName=\"p\">{`Node.js`}</strong></p>\n    <p>{`For Node.js SDK a `}<inlineCode parentName=\"p\">{`logger`}</inlineCode>{` object should be provided.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`const CONFIG = {\n  client: \"<your client code>\",\n  organizationId: \"<your organization ID>\",\n  logger: console\n};\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Java SDK`}</strong></p>\n    <p>{`For Java SDK `}<inlineCode parentName=\"p\">{`logRequests`}</inlineCode>{` on the `}<inlineCode parentName=\"p\">{`ClientConfig`}</inlineCode>{` should be enabled.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`ClientConfig config = ClientConfig.builder()\n  .client(\"<your client code>\")\n  .organizationId(\"<your organization ID>\")\n  .logRequests(true)\n  .build();\n`}</code></pre>\n    <p>{`Also the JVM should be started with the following command line parameter:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$ java -Dorg.slf4j.simpleLogger.defaultLogLevel=DEBUG ...\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"ensure-target-traces-is-enabled\"\n    }}>{`Ensure Target Traces is enabled`}</h2>\n    <p>{`Enabling traces will output additional information from Adobe Target in regards to the rules artifact.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Navigate to the Target UI in Experience Cloud.`}</p>\n        <p parentName=\"li\"><em parentName=\"p\">{`Insert image-target-ui-1.png`}</em></p>\n      </li>\n    </ol>\n    <p>{`1 Navigate to `}<strong parentName=\"p\">{`Administration`}</strong>{` > `}<strong parentName=\"p\">{`Implementation`}</strong>{` and click `}<strong parentName=\"p\">{`Generate New Authorization Token`}</strong>{`.`}</p>\n    <p>{`   `}<em parentName=\"p\">{`Insert image-target-ui-2.png`}</em></p>\n    <ol>\n      <li parentName=\"ol\">{`Copy the newly generated authorization token to the clipboard and add it to your Target request:`}</li>\n    </ol>\n    <p><strong parentName=\"p\">{`Node.js`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`const request = {\n  trace: {\n    authorizationToken: \"88f1a924-6bc5-4836-8560-2f9c86aeb36b\"\n  },\n  execute: {\n    mboxes: [{\n      name: \"sdk-mbox\"\n    }]\n}};\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Java SDK`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`Trace trace = new Trace()\n  .authorizationToken(\"88f1a924-6bc5-4836-8560-2f9c86aeb36b\");\nContext context = new Context()\n  .channel(ChannelType.WEB);\nMboxRequest mbox = new MboxRequest()\n  .name(\"sdk-mbox\")\n  .index(0);\nExecuteRequest executeRequest = new ExecuteRequest()\n  .mboxes(Arrays.asList(mbox));\n\nTargetDeliveryRequest request = TargetDeliveryRequest.builder()\n  .trace(trace)\n  .context(context)\n  .execute(executeRequest)\n  .build();\n`}</code></pre>\n    <ol>\n      <li parentName=\"ol\">{`With the logger and trace in place, start your app and monitor the server terminal. The following output from the logger confirms that the rule artifact has been retrieved:`}</li>\n    </ol>\n    <p><strong parentName=\"p\">{`Node.js SDK`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`  AT: LD.ArtifactProvider fetching artifact - https://assets.adobetarget.com/your-client-code/production/v1/rules.json\n  AT: LD.ArtifactProvider artifact received - status=200\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Java SDK`}</strong></p>\n    <p>{`TBD`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Wait the duration of the polling interval (default is 5 minutes) and ensure that the artifact is being fetched by the SDK. The same terminal logs will be output.`}</p>\n        <p parentName=\"li\">{`Additionally, information from the the Target Trace should be outputted to the terminal with details about the rule artifact.`}</p>\n      </li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`\"trace\": {\n   \"clientCode\": \"your-client-code\",\n   \"artifact\": {\n     \"artifactLocation\": \"https://assets.adobetarget.com/your-client-code/production/v1/rules.json\",\n     \"pollingInterval\": 300000,\n     \"pollingHalted\": false,\n     \"artifactVersion\": \"1.0.0\",\n     \"artifactRetrievalCount\": 10,\n     \"artifactLastRetrieved\": \"2020-09-20T00:09:42.707Z\",\n     \"clientCode\": \"your-client-code\",\n     \"environment\": \"production\",\n     \"generatedAt\": \"2020-09-22T17:17:59.783Z\"\n   },\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"validate-content-delivery-via-the-cached-rule-artifact-by-creating-a-test-on-device-decisioning-activity-through-the-form-based-experience-composer\"\n    }}>{`Validate content delivery via the cached rule artifact by creating a test on-device decisioning activity through the form-based experience composer.`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Navigate to the Target UI in Experience Cloud`}</p>\n        <p parentName=\"li\"><em parentName=\"p\">{`Insert image-target-ui-1.png`}</em></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create a new XT activity using the Form-based Experience Composer.`}</p>\n        <p parentName=\"li\"><em parentName=\"p\">{`Insert image-form-base-composer-ui.png`}</em></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Input the mbox name used in your Target request as the location for the XT activity (note this should be a unique mbox name specifically for development purposes).`}</p>\n        <p parentName=\"li\"><em parentName=\"p\">{`Insert image-mbox-location-ui.png`}</em></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Change the content to either an HTML offer or JSON offer. This will be returned in the Target request to your application. Leave targeting for the activity as 'All Visitors' and select any metric you would like. Name the activity, save it, and then activate it to ensure the mbox/location in use is only for development.`}</p>\n        <p parentName=\"li\"><em parentName=\"p\">{`Insert image-target-content-ui.png`}</em></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In your application, add a log statements for the content received in the response from your Target request`}</p>\n      </li>\n    </ol>\n    <p><strong parentName=\"p\">{`Node.js SDK`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`try {\n  const response = await targetClient.getOffers({ request });\n  console.log('Response: ', response.response.execute.mboxes[0].options[0].content);\n} catch (error) {\n  console.error('Something went wrong', error);\n}\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Java SDK`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`try {\n  Context context = new Context()\n    .channel(ChannelType.WEB);\n  MboxRequest mbox = new MboxRequest()\n    .name(\"sdk-mbox\")\n    .index(0);\n  ExecuteRequest executeRequest = new ExecuteRequest()\n    .mboxes(Arrays.asList(mbox));\n\n  TargetDeliveryRequest request = TargetDeliveryRequest.builder()\n    .context(context)\n    .decisioningMethod(DecisioningMethod.ON_DEVICE)\n    .execute(executeRequest)\n    .build();\n\n    TargetDeliveryResponse response = targetClient.getOffers(request);\n  logger.debug(\"Response: \", response.getResponse().getExecute().getMboxes().get(0).getOptions().get(0).getContent());\n} catch (Exception exception) {\n  logger.error(\"Something went wrong\", exception);\n}\n`}</code></pre>\n    <ol>\n      <li parentName=\"ol\">{`Review the logs in your terminal to verify that your content is being delivered and that it was delivered via the rules artifact on your server. The `}<inlineCode parentName=\"li\">{`LD.DeciscionProvider`}</inlineCode>{` object is outputted when the activity qualification and decisioning were determined on-device based on the rules artifact. Furthermore, due to the logging of the `}<inlineCode parentName=\"li\">{`content`}</inlineCode>{`, you should see `}<inlineCode parentName=\"li\">{`<div>test</div>`}</inlineCode>{` or however you have decided the response to be when creating the test activity.`}</li>\n    </ol>\n    <p><strong parentName=\"p\">{`Logger output`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`AT: LD.DecisionProvider {...}\nAT: Response received {...}\nResponse:  <div>test</div>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"common-troubleshooting-scenarios\"\n    }}>{`Common Troubleshooting Scenarios`}</h2>\n    <p><strong parentName=\"p\">{`NOTE`}</strong>{`: Please be sure to review `}<em parentName=\"p\">{`supported features`}</em>{` for on-device decisioning when running into issues.`}</p>\n    <h3 {...{\n      \"id\": \"on-device-decisioning-activities-not-executing-due-to-unsupported-audience-or-activity\"\n    }}>{`On-device decisioning activities not executing due to unsupported audience or activity`}</h3>\n    <p>{`A common issue that can occur is on-device decisioning activities not executing due to the audience in use or the activity type being unsupported.`}</p>\n    <p>{`(1) Using the logger output, review the entries in the trace property in your response object. Specifically identify the campaigns property:`}</p>\n    <p><strong parentName=\"p\">{`Trace output`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`  \"execute\": {\n  \"mboxes\": [\n    {\n      \"name\": \"your-mbox-name\",\n      \"index\": 0,\n      \"trace\": {\n        \"clientCode\": \"your-client-code\",\n        ...\n        \"campaigns\": [],\n        ...\n      }\n    }\n`}</code></pre>\n    <p>{`You will notice that the activity you are trying to qualify for is not in the `}<inlineCode parentName=\"p\">{`campaigns`}</inlineCode>{` property since the audience or activity type is not supported. If the activity is listed under the `}<inlineCode parentName=\"p\">{`campaigns`}</inlineCode>{` property, your issue is not due to an unsupported audience or activity type.`}</p>\n    <p>{`(2) Additionally, locate the `}<inlineCode parentName=\"p\">{`rules.json`}</inlineCode>{` file by looking at the `}<inlineCode parentName=\"p\">{`trace`}</inlineCode>{` > `}<inlineCode parentName=\"p\">{`artifact`}</inlineCode>{` > `}<inlineCode parentName=\"p\">{`artifactLocation`}</inlineCode>{` in your logger output and notice that your activity is missing from the `}<inlineCode parentName=\"p\">{`rules`}</inlineCode>{` > `}<inlineCode parentName=\"p\">{`mboxes`}</inlineCode>{` property:`}</p>\n    <p><strong parentName=\"p\">{`Logger output`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{` ...\n rules: {\n   mboxes: { },\n   views: { }\n }\n`}</code></pre>\n    <p>{`Finally, navigate to the Target UI and locate the activity in question: `}<a parentName=\"p\" {...{\n        \"href\": \"https://experience.adobe.com/target\"\n      }}>{`experience.adobe.com/target`}</a></p>\n    <p>{`Review the rules used in the audience and ensure you only use those aforementioned that are supported. Additionally, ensure that the activity type is either A/B or XT.`}</p>\n    <p><em parentName=\"p\">{`Insert image-target-audience-ui.png`}</em></p>\n    <h3 {...{\n      \"id\": \"on-device-decisioning-activities-not-executing-due-to-unqualified-audience\"\n    }}>{`On-device decisioning activities not executing due to unqualified audience`}</h3>\n    <p>{`If an on-device decisioning activity is not executing, but you have verified that your rules.json file contains the activity, run through the following steps:`}</p>\n    <p>{`(1) Ensure that the mbox you are executing in your application is the same one the activity is using:`}</p>\n    <p><strong parentName=\"p\">{`rules.json`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{` ...\n rules: {\n   mboxes: {\n    target-only-node-sdk-mbox: [{ // this mbox name must match the mbox in your request\n      ...\n    }]\n   }\n ...\n`}</code></pre>\n    <p>{` `}<strong parentName=\"p\">{`Node.js SDK`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`const request = {\n  trace: {\n    authorizationToken: '2dfc1dce-1e58-4e05-bbd6-a6725893d4d6'\n  },\n  execute: {\n    mboxes: [{\n      address: getAddress(req),\n      name: \"target-only-node-sdk-mbox-two\" // this mbox name must match the mbox the activity is using\n    }]\n  }};\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Java SDK`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`Context context = new Context()\n  .channel(ChannelType.WEB);\nMboxRequest mbox = new MboxRequest()\n  .name(\"target-only-node-sdk-mbox-two\")\n  .index(0);\nExecuteRequest executeRequest = new ExecuteRequest()\n  .mboxes(Arrays.asList(mbox));\n\nTargetDeliveryRequest request = TargetDeliveryRequest.builder()\n  .context(context)\n  .decisioningMethod(DecisioningMethod.ON_DEVICE)\n  .execute(executeRequest)\n  .build();\n\nTargetDeliveryResponse response = targetClient.getOffers(request);\n`}</code></pre>\n    <p>{`(2) Ensure that you are qualified for the audience for you activity by reviewing the `}<inlineCode parentName=\"p\">{`matchedRuleConditions`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`unmatchedRuleConditions`}</inlineCode>{` property of your trace output:`}</p>\n    <p><strong parentName=\"p\">{`Trace output`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`...\n},\n\"campaignId\": 368564,\n\"campaignType\": \"landing\",\n\"matchedSegmentIds\": [],\n\"unmatchedSegmentIds\": [\n  6188838\n      ],\n      \"matchedRuleConditions\": [],\n          \"unmatchedRuleConditions\": [\n            {\n              \"in\": [\n                \"true\",\n                {\n                  \"var\": \"mbox.auth_lc\"\n                }\n              ]\n            }\n          ]\n    ...\n`}</code></pre>\n    <p>{`If you have unmatched rule conditions, you are not qualified for the activity and thus the activity will not execute. Review the rules in your audience to see why you are not qualifying.`}</p>\n    <h3 {...{\n      \"id\": \"on-device-decisioning-activity-not-executing-but-reason-not-apparent\"\n    }}>{`On-device decisioning activity not executing, but reason not apparent`}</h3>\n    <p>{`It may not be readily apparent why an on-device decisioning activity is not executing. In this case, follow these troubleshooting steps to identify the issue:`}</p>\n    <p>{`(1) Read through the logger trace output in your console and identify the artifact property, which will look similar to the following:`}</p>\n    <p><strong parentName=\"p\">{`Trace output`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`...\n      \"artifact\": {\n          \"artifactLocation\": \"https://assets.adobetarget.com/your-client-code/production/v1/rules.json\",\n          \"pollingInterval\": 300000,\n          \"pollingHalted\": false,\n          \"artifactVersion\": \"1.0.0\",\n          \"artifactRetrievalCount\": 3,\n          \"artifactLastRetrieved\": \"2020-10-16T00:56:27.596Z\",\n          \"clientCode\": \"adobeinterikleisch\",\n          \"environment\": \"production\"\n        },\n...\n`}</code></pre>\n    <p>{`Look at the `}<inlineCode parentName=\"p\">{`artifactLastRetrieved`}</inlineCode>{` date of the artifact and ensure that you have the latest `}<inlineCode parentName=\"p\">{`rules.json`}</inlineCode>{` file downloaded to your app.`}</p>\n    <p>{`(2) Find the `}<inlineCode parentName=\"p\">{`evaluatedCampaignTargets`}</inlineCode>{` property in your logger output:`}</p>\n    <p><strong parentName=\"p\">{`Logger output`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`... \n  \"evaluatedCampaignTargets\": [\n      {\n        \"context\": {\n          \"current_timestamp\": 1602812599608,\n          \"current_time\": \"0143\",\n          \"current_day\": 5,\n          \"user\": {\n            \"browserType\": \"unknown\",\n            \"platform\": \"Unknown\",\n            \"locale\": \"en\",\n            \"browserVersion\": -1\n          },\n          \"page\": {\n            \"url\": \"localhost:3000/\",\n            \"path\": \"/\",\n            \"query\": \"\",\n            \"fragment\": \"\",\n            \"subdomain\": \"\",\n            \"domain\": \"3000\",\n            \"topLevelDomain\": \"\",\n            \"url_lc\": \"localhost:3000/\",\n            \"path_lc\": \"/\",\n            \"query_lc\": \"\",\n            \"fragment_lc\": \"\",\n            \"subdomain_lc\": \"\",\n            \"domain_lc\": \"3000\",\n            \"topLevelDomain_lc\": \"\"\n          },\n          \"referring\": {\n            \"url\": \"localhost:3000/\",\n            \"path\": \"/\",\n            \"query\": \"\",\n            \"fragment\": \"\",\n            \"subdomain\": \"\",\n            \"domain\": \"3000\",\n            \"topLevelDomain\": \"\",\n            \"url_lc\": \"localhost:3000/\",\n            \"path_lc\": \"/\",\n            \"query_lc\": \"\",\n            \"fragment_lc\": \"\",\n            \"subdomain_lc\": \"\",\n            \"domain_lc\": \"3000\",\n            \"topLevelDomain_lc\": \"\"\n          },\n          \"geo\": {},\n          \"mbox\": {},\n          \"allocation\": 23.79\n        },\n        \"campaignId\": 368564,\n        \"campaignType\": \"landing\",\n        \"matchedSegmentIds\": [],\n        \"unmatchedSegmentIds\": [\n          6188838\n        ],\n        \"matchedRuleConditions\": [],\n        \"unmatchedRuleConditions\": [\n          {\n            \"in\": [\n              \"true\",\n              {\n                \"var\": \"mbox.auth_lc\"\n              }\n            ]\n          }\n        ]\n...\n`}</code></pre>\n    <p>{`(3) Review the `}<inlineCode parentName=\"p\">{`context`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`page`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`referring`}</inlineCode>{` data to ensure it is as expected as this can affect the targeting qualification of the activity.`}</p>\n    <p>{`(4) Review the `}<inlineCode parentName=\"p\">{`campaignId`}</inlineCode>{` to ensure the activity or activities you are expecting to execute are evaluated. The `}<inlineCode parentName=\"p\">{`campaignId`}</inlineCode>{` will match the activity ID on the activity overview tab in the Target UI:`}</p>\n    <p><em parentName=\"p\">{`Insert image-activity-id-target-ui.png`}</em></p>\n    <p>{`(5) Review the `}<inlineCode parentName=\"p\">{`matchedRuleConditions`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`unmatchedRuleConditions`}</inlineCode>{` to identify issues with qualifying for the audience rules for a given activity.`}</p>\n    <p>{`(6) Review the latest `}<inlineCode parentName=\"p\">{`rules.json`}</inlineCode>{` file to ensure the activity or activities you want to execute locally are included. The location is referenced above in step 1.`}</p>\n    <p>{`(7) Ensure you are using the same mbox names in your request and activities.`}</p>\n    <p>{`(8) Ensure you are using supported audience rules and supported activity types.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}