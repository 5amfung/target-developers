{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/implement/delivery-api/client-hints.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"oTAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,4CADR,6CAGA,2DAA4C,cAAGC,WAAW,IACtD,KAAQ,sDADgC,+BAA5C,YAEoD,cAAGA,WAAW,IAC9D,KAAQ,gCADwC,8BAFpD,cAKA,2JACA,eACE,GAAM,6BADR,8BAGA,eACE,GAAM,oBADR,qBAGA,kyBACA,eACE,GAAM,iBADR,kBAGA,uIACA,qBAAK,iBAAMA,WAAW,OAAjB,q6BAsBL,eACE,GAAM,cADR,eAGA,4cAKJJ,EAAWK,gBAAiB","file":"component---src-pages-implement-delivery-api-client-hints-md-72777f46c5919851340d.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/target-developers/target-developers/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"client-hints-and-the-target-delivery-api\"\n    }}>{`Client Hints and the Target Delivery API`}</h1>\n    <p>{`For an overview of Client Hints, see `}<a parentName=\"p\" {...{\n        \"href\": \"../client-side/atjs/user-agent-and-client-hints.md\"\n      }}>{`User-agent and Client Hints`}</a>{` in the `}<a parentName=\"p\" {...{\n        \"href\": \"../../implement/client-side/\"\n      }}>{`Client-side Implementation`}</a>{` section.`}</p>\n    <p>{`Client Hints must be sent to Target on the offers request. Generally it is recommended to send all available Client Hints to Target.`}</p>\n    <h2 {...{\n      \"id\": \"delivery-api-direct-calls\"\n    }}>{`Delivery API direct calls`}</h2>\n    <h3 {...{\n      \"id\": \"from-the-browser\"\n    }}>{`From the browser`}</h3>\n    <p>{`In this case the browser will send low-entropy Client Hints to Target automatically via request headers.  But there are a couple browser-level limitations with this implementation.  First - no Client Hints headers will be sent from the browser unless the request is being made over https.  Second - Client Hints will not be sent on the first request to Target on the page.  Client Hints headers will only be sent on the second request and all requests thereafter.  This means that audience segmentation and personalization cannot be performed by Target on the first page visit.  In order to get around both of these limitations, we strongly recommend using the User Agent Client Hints API in the browser to collect the Client Hints directly, and send them on the request payload.`}</p>\n    <h3 {...{\n      \"id\": \"from-a-server\"\n    }}>{`From a server`}</h3>\n    <p>{`In this case the Client Hints must be manually forwarded from the browser to Target on the Delivery API request.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`curl -X POST 'http://mboxedge28.tt.omtrdc.net/rest/v1/delivery?client=myClientCode&sessionId=abcdefghijkl00014' -d '{\n  \"context\": {\n    \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Safari/537.36\",\n    \"clientHints\": {\n      \"Sec-CH-UA-Model\": \"iPhone\",\n      \"Sec-CH-UA-Mobile\": true,\n      \"Sec-CH-UA-Platform\": \"iOS\",\n      \"Sec-CH-UA\": \"[ { \\\\\"brand\\\\\": \\\\\"Chromium\\\\\", \\\\\"version\\\\\": \\\\\"91\\\\\" }, { \\\\\"brand\\\\\": \\\\\" Not;A Brand\\\\\", \\\\\"version\\\\\": \\\\\"99\\\\\" } ]\",\n      \"Sec-CH-UA-Full-Version-List\": \"[ { \\\\\"brand\\\\\": \\\\\"Chromium\\\\\", \\\\\"version\\\\\": \\\\\"91.1.1.1\\\\\" }, { \\\\\"brand\\\\\": \\\\\" Not;A Brand\\\\\", \\\\\"version\\\\\": \\\\\"99.1.1.1\\\\\" } ]\",\n      \"Sec-CH-UA-Platform-Version\": \"10.0.0\",\n      \"Sec-CH-UA-Arch\": \"x86\",\n      \"Sec-CH-UA-Bitness\": \"64\"\n    }\n  },\n  \"execute\": {\n    \"mboxes\": [{\n      \"name\": \"home\",\n      \"index\": 1\n    }]\n  }\n}'\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"formatting\"\n    }}>{`Formatting`}</h2>\n    <p>{`Client Hints headers Sec-CH-UA and Sec-CH-UA-Full-Version-List have a different format than the results from the Client Hints browser API (navigator.userAgentData.brands/navigator.userAgentData.getHighEntropyValues). Both of these formats are accepted by Delivery API. The Delivery API will normalize the values into the format used in the request headers, which is important to keep in mind if accessing Client Hints in profile scripts.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}