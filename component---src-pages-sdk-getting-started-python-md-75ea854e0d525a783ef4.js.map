{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/sdk/getting-started/python.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-sdk-getting-started-python-md-75ea854e0d525a783ef4.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/target-developers/target-developers/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"python\"\n    }}>{`Python`}</h1>\n    <h2 {...{\n      \"id\": \"summary-of-steps\"\n    }}>{`Summary of steps`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Enable On-Device Decisioning for your organization`}</li>\n      <li parentName=\"ol\">{`Install the SDK`}</li>\n      <li parentName=\"ol\">{`Initialize the SDK`}</li>\n      <li parentName=\"ol\">{`Set up the feature flags in an Adobe Target A/B Test`}</li>\n      <li parentName=\"ol\">{`Implement and render the feature in your application`}</li>\n      <li parentName=\"ol\">{`Implement tracking for events in your application`}</li>\n      <li parentName=\"ol\">{`Activate your A/B activity`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"enable-on-device-decisioning-for-your-organization\"\n    }}>{`Enable On-Device Decisioning for your organization`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Enabling on-device decisioning ensures an A/B activity is executed at near-zero latency. To enable this feature, navigate to `}<strong parentName=\"p\">{`Administration`}</strong>{` > `}<strong parentName=\"p\">{`Implementation`}</strong>{` > `}<strong parentName=\"p\">{`Account details`}</strong>{` and enable the `}<strong parentName=\"p\">{`On-Device Decisioning`}</strong>{` toggle.`}</p>\n        <p parentName=\"li\"><em parentName=\"p\">{`Insert image-odd4.png`}</em></p>\n        <p parentName=\"li\"><strong parentName=\"p\">{`NOTE`}</strong>{`: You must have the Admin or Approver user role to enable or disable the On-Device Decisioning toggle.`}</p>\n        <p parentName=\"li\">{`After enabling the On-Device Decisioning toggle, Adobe Target begins generating `}<em parentName=\"p\">{`rule artifacts`}</em>{` for your client.`}</p>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"install-the-sdk\"\n    }}>{`Install the SDK`}</h2>\n    <p>{`Run the following command in your project directory in the terminal.`}</p>\n    <p>{`pip`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`pip install target-python-sdk\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"initialize-the-sdk\"\n    }}>{`Initialize the SDK`}</h2>\n    <p>{`Using the `}<inlineCode parentName=\"p\">{`create`}</inlineCode>{` method of the SDK, configure the SDK to complete the initialization step.\nThe rule artifact is downloaded during the SDK initialization step. You can customize the initialization step to determine how the artifact is downloaded and used.`}</p>\n    <p>{`Python`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`from target_python_sdk import TargetClient\n\ndef target_client_ready():\n    # Adobe Target SDK has now downloaded the JSON artifact locally, which contains the activity details.\n    # We will see how to use the artifact here very soon.\n\nCONFIG = {\n    \"client\": \"<your target client code>\",\n    \"organization_id\": \"your EC org id\",\n    \"decisioning_method\": \"on-device\",\n    \"events\": {\n        \"client_ready\": target_client_ready\n    }\n}\n\ntarget_client = TargetClient.create(CONFIG)\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"set-up-the-feature-flags-in-an-adobe-target-ab-test\"\n    }}>{`Set up the feature flags in an Adobe Target A/B Test`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In Adobe Target, navigate to the `}<strong parentName=\"p\">{`Activities`}</strong>{` page, then select `}<strong parentName=\"p\">{`Create Activity`}</strong>{` > `}<strong parentName=\"p\">{`A/B test`}</strong>{`.`}</p>\n        <p parentName=\"li\"><em parentName=\"p\">{`Insert image-ab.png`}</em></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In the `}<strong parentName=\"p\">{`Create A/B Test Activity`}</strong>{` modal, leave the default `}<strong parentName=\"p\">{`Web`}</strong>{` option selected (1), select `}<strong parentName=\"p\">{`Form`}</strong>{` as your experience composer (2), select `}<strong parentName=\"p\">{`Default Workspace`}</strong>{` with `}<strong parentName=\"p\">{`No Property Restrictions`}</strong>{`(3), and click `}<strong parentName=\"p\">{`Next`}</strong>{` (4).`}</p>\n        <p parentName=\"li\"><em parentName=\"p\">{`Insert image-form`}</em></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In the `}<strong parentName=\"p\">{`Experiences`}</strong>{` step of activity creation, provide a name for your activity (1) and add a second experience, Experience B, by clicking the `}<strong parentName=\"p\">{`Add Experience`}</strong>{` (2) button. Enter the location name of your choice (3). For example,  ondevice-featureflag or homepage-addtocart-featureflag are location names indicating the destinations for feature flag testing.  In the example shown below, ondevice-featureflag is the location defined for Experience B. You can optionally add Audience refinements (4) to restrict qualification to the activity.`}</p>\n        <p parentName=\"li\"><em parentName=\"p\">{`Insert image-location.png`}</em></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In the `}<strong parentName=\"p\">{`Content`}</strong>{` section on the same page, select `}<strong parentName=\"p\">{`Create JSON Offer`}</strong>{` in the drop-down (1) as shown.`}</p>\n        <p parentName=\"li\"><em parentName=\"p\">{`Insert image-offer.png`}</em></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In the JSON Data text box that appears, enter your feature flag variables for each experience (1), using a valid JSON object (2).`}</p>\n        <p parentName=\"li\">{`Enter the feature flag variables for Experience A.`}</p>\n        <p parentName=\"li\"><em parentName=\"p\">{`Insert image-json_a.png`}</em></p>\n        <p parentName=\"li\">{`Enter the feature flag variables for Experience B.`}</p>\n        <p parentName=\"li\"><em parentName=\"p\">{`Insert image-json_b.png`}</em></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Click `}<strong parentName=\"p\">{`Next`}</strong>{` (1) to advance to the `}<strong parentName=\"p\">{`Targeting`}</strong>{` step of activity creation.`}</p>\n        <p parentName=\"li\"><em parentName=\"p\">{`Insert image-next_2_t.png`}</em></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In the `}<strong parentName=\"p\">{`Targeting`}</strong>{` step, we show an example that leaves Audience Targeting (2) as All Visitors for simplicity, but note Adobe recommends you always target your audiences for real, production activities. Click `}<strong parentName=\"p\">{`Next`}</strong>{` (3) to advance to the `}<strong parentName=\"p\">{`Goals & Settings`}</strong>{` step of activity creation.`}</p>\n        <p parentName=\"li\"><em parentName=\"p\">{`Insert image-next_2_g.png`}</em></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`In the `}<strong parentName=\"p\">{`Goals & Settings`}</strong>{` step, set `}<strong parentName=\"p\">{`Reporting Source`}</strong>{` as ••Adobe Target`}<strong parentName=\"p\">{` (1) and define the `}</strong>{`Goal Metric`}<strong parentName=\"p\">{` as `}</strong>{`Conversion`}<strong parentName=\"p\">{`, specifying the details based on your site's conversion metrics (2). Click `}</strong>{`Save & Close** (3) to save the activity.`}</p>\n        <p parentName=\"li\"><em parentName=\"p\">{`Insert image-conv.png`}</em></p>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"implement-and-render-the-feature-in-your-application\"\n    }}>{`Implement and render the feature in your application`}</h2>\n    <p>{`After setting up the feature flag variables in Adobe Target, modify your application code to use them. For example, after getting the feature flag in the application, you can use it to enable features and render the experience for which the visitor qualified.`}</p>\n    <p>{`Python`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`# ... Code removed for brevity\n\nfeature_flags = {}\n\ndef target_client_ready():\n    attribute_provider = target_client.get_attributes([\"ondevice-featureflag\"])\n    feature_flags = attribute_provider.as_object(mbox_name=\"ondevice-featureflag\")\n    if feature_flags.get(\"enabled\") and feature_flags.get(\"flag\") != \"expA\": # Assuming \"expA\" is control\n        print(\"Render alternate experience {}\".format(feature_flags.get(\"flag\")))\n    else:\n        print(\"Render default experience\")\n6. Implement additional tracking for events in your application\nOptionally, you may send additional events for tracking conversions using the send_notification() function.\n# ... Code removed for brevity\n\n# When a conversion happens\nnotification_mbox = NotificationMbox(name=\"orderConfirm\")\norder = Order(id=\"BR9389, total=98.93, purchased_product_ids=[\"J9393\", \"3DJJ3\"])\nnotification = Notification(\n    id=\"conversion\",\n    type=MetricType.DISPLAY,\n    timestamp=1621530726000,  # Epoch time in milliseconds\n    mbox=notification_mbox,\n    order=order\n)\nnotification_request = DeliveryRequest(notifications=[notification])\n\n\ntarget_client.send_notifications({\n    \"target_cookie\": target_cookie,\n    \"request\" : notification_request\n})\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"activate-your-ab-activity\"\n    }}>{`Activate your A/B activity`}</h2>\n    <p>{`Click `}<strong parentName=\"p\">{`Activate`}</strong>{` (1) to activate your A/B activity.`}</p>\n    <p><strong parentName=\"p\">{`NOTE`}</strong>{`: You must have the Approver or Publisher `}<inlineCode parentName=\"p\">{`user role`}</inlineCode>{` to perform this step.`}</p>\n    <p><em parentName=\"p\">{`Insert image-activate.png`}</em></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}