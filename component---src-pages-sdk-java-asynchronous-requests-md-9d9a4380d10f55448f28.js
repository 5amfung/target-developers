(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[9799],{84354:function(e,t,n){"use strict";n.r(t),n.d(t,{_frontmatter:function(){return u},default:function(){return c}});var s,a=n(22122),r=n(19756),o=(n(15007),n(64983)),i=n(99536),l=["components"],u={},d=(s="CodeBlock",function(e){return console.warn("Component "+s+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.mdx)("div",e)}),p={_frontmatter:u},m=i.Z;function c(e){var t=e.components,n=(0,r.Z)(e,l);return(0,o.mdx)(m,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"asynchronous-requests"},"Asynchronous Requests"),(0,o.mdx)("h2",{id:"description"},"Description"),(0,o.mdx)("p",null,"One benefit of server-side integration is that you can leverage the huge bandwidth and computing resources available on the server-side by using parallelism. Target Java SDK supports asynchronous requests, which can reduce the effective target time to zero."),(0,o.mdx)("h2",{id:"supported-methods"},"Supported Methods"),(0,o.mdx)(d,{slots:"heading, code",repeat:"1",languages:"JAVA",mdxType:"CodeBlock"}),(0,o.mdx)("h3",{id:"methods"},"Methods"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-java"},"CompletableFuture<TargetDeliveryResponse> getOffersAsync(TargetDeliveryRequest request);\nCompletableFuture<ResponseStatus> sendNotificationsAsync(TargetDeliveryRequest request);\nCompletableFuture<Attributes> getAttributesAsync(TargetDeliveryRequest targetRequest, String ...mboxes);\n")),(0,o.mdx)("h2",{id:"example"},"Example"),(0,o.mdx)("p",null,"A sample ",(0,o.mdx)("inlineCode",{parentName:"p"},"Spring")," application Controller could look like this:"),(0,o.mdx)(d,{slots:"heading, code",repeat:"1",languages:"JAVA",mdxType:"CodeBlock"}),(0,o.mdx)("h3",{id:"sample-controller"},"Sample Controller"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-java"},'@RestController\npublic class TargetRestController {\n\n    @Autowired\n    private TargetClient targetJavaClient;\n\n    @GetMapping("/mboxTargetOnlyAsync")\n        public TargetDeliveryResponse mboxTargetOnlyAsync(\n                @RequestParam(name = "mbox", defaultValue = "server-side-mbox") String mbox,\n                HttpServletRequest request, HttpServletResponse response) {\n            ExecuteRequest executeRequest = new ExecuteRequest()\n                    .mboxes(getMboxRequests(mbox));\n\n            TargetDeliveryRequest targetDeliveryRequest = TargetDeliveryRequest.builder()\n                    .context(getContext(request))\n                    .execute(executeRequest)\n                    .cookies(getTargetCookies(request.getCookies()))\n                    .build();\n            CompletableFuture<TargetDeliveryResponse> targetResponseAsync =\n                    targetJavaClient.getOffersAsync(targetDeliveryRequest);\n            targetResponseAsync.thenAccept(tr -> setCookies(tr.getCookies(), response));\n            simulateIO();\n            TargetDeliveryResponse targetResponse = targetResponseAsync.join();\n            return targetResponse;\n        }\n\n    /**\n     * Function for simulating network calls like other microservices and database calls\n     */\n    private void simulateIO() {\n        try {\n            Thread.sleep(200L);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n\n}\n')),(0,o.mdx)("p",null,"This example assumes you have ",(0,o.mdx)("a",{parentName:"p",href:"/target-developers/initialize-sdk.html"},"initialized the SDK")," as a spring bean and that you have ",(0,o.mdx)("a",{parentName:"p",href:"/target-developers/src/pages/sdk/java/utility-methods.md"},"utility methods")," available."),(0,o.mdx)("p",null,"The Target request is fired before ",(0,o.mdx)("inlineCode",{parentName:"p"},"simulateIO")," and by the time it is executed target result should also be ready. Even if it is not, you will have significant savings in most cases."))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-sdk-java-asynchronous-requests-md-9d9a4380d10f55448f28.js.map