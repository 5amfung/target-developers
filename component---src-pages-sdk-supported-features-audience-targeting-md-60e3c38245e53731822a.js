(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[9988],{66002:function(e,t,n){"use strict";n.r(t),n.d(t,{_frontmatter:function(){return s},default:function(){return c}});var a=n(22122),r=n(19756),o=(n(15007),n(64983)),d=n(99536),i=["components"],s={},l={_frontmatter:s},m=d.Z;function c(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.mdx)(m,(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"audience-targeting"},"Audience targeting"),(0,o.mdx)("p",null,"The following table indicates which audience rules are supported or not supported for on-device decisioning."),(0,o.mdx)("table",null,(0,o.mdx)("thead",{parentName:"table"},(0,o.mdx)("tr",{parentName:"thead"},(0,o.mdx)("th",{parentName:"tr",align:null},"Audience Rule"),(0,o.mdx)("th",{parentName:"tr",align:null},"On-device Decisioning"))),(0,o.mdx)("tbody",{parentName:"table"},(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("a",{parentName:"td",href:"https://experienceleague.adobe.com/docs/target/using/audiences/create-audiences/categories-audiences/geo.html"},"Geo"),"{target=_blank}"),(0,o.mdx)("td",{parentName:"tr",align:null},"Yes")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("a",{parentName:"td",href:"https://experienceleague.adobe.com/docs/target/using/audiences/create-audiences/categories-audiences/network.html"},"Network"),"{target=_blank}"),(0,o.mdx)("td",{parentName:"tr",align:null},"No")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("a",{parentName:"td",href:"https://experienceleague.adobe.com/docs/target/using/audiences/create-audiences/categories-audiences/mobile.html"},"Mobile"),"{target=_blank}"),(0,o.mdx)("td",{parentName:"tr",align:null},"No")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("a",{parentName:"td",href:"https://experienceleague.adobe.com/docs/target/using/audiences/create-audiences/categories-audiences/custom-parameters.html"},"Custom Parameters"),"{target=_blank}"),(0,o.mdx)("td",{parentName:"tr",align:null},"Yes")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("a",{parentName:"td",href:"https://experienceleague.adobe.com/docs/target/using/audiences/create-audiences/categories-audiences/operating-system.html"},"Operating System"),"{target=_blank}"),(0,o.mdx)("td",{parentName:"tr",align:null},"Yes")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("a",{parentName:"td",href:"https://experienceleague.adobe.com/docs/target/using/audiences/create-audiences/categories-audiences/site-pages.html"},"Site Pages"),"{target=_blank}"),(0,o.mdx)("td",{parentName:"tr",align:null},"Yes")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("a",{parentName:"td",href:"https://experienceleague.adobe.com/docs/target/using/audiences/create-audiences/categories-audiences/browser.html"},"Browser"),"{target=_blank}"),(0,o.mdx)("td",{parentName:"tr",align:null},"Yes")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("a",{parentName:"td",href:"https://experienceleague.adobe.com/docs/target/using/audiences/create-audiences/categories-audiences/visitor-profile.html"},"Visitor Profile"),"{target=_blank}"),(0,o.mdx)("td",{parentName:"tr",align:null},"No")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("a",{parentName:"td",href:"https://experienceleague.adobe.com/docs/target/using/audiences/create-audiences/categories-audiences/traffic-sources.html"},"Traffic Sources"),"{target=_blank}"),(0,o.mdx)("td",{parentName:"tr",align:null},"No")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("a",{parentName:"td",href:"https://experienceleague.adobe.com/docs/target/using/audiences/create-audiences/categories-audiences/time-frame.html"},"Time Frame"),"{target=_blank}"),(0,o.mdx)("td",{parentName:"tr",align:null},"Yes")),(0,o.mdx)("tr",{parentName:"tbody"},(0,o.mdx)("td",{parentName:"tr",align:null},(0,o.mdx)("a",{parentName:"td",href:"https://experienceleague.adobe.com/docs/target/using/integrate/mmp.html"},"Experience Cloud Audiences"),"{target=_blank} (Audiences from Adobe Audience Manager, Adobe Analytics, and Adobe Experience Manager"),(0,o.mdx)("td",{parentName:"tr",align:null},"No")))),(0,o.mdx)("h2",{id:"geo-targeting-for-on-device-decisioning"},"Geo targeting for on-device decisioning"),(0,o.mdx)("p",null,"In order to maintain near-zero latency for on-device decisioning activities with geo-based audiences, Adobe recommends you provide the geo values yourself in the call to ",(0,o.mdx)("inlineCode",{parentName:"p"},"getOffers"),". Do this by setting the ",(0,o.mdx)("inlineCode",{parentName:"p"},"Geo")," object in the ",(0,o.mdx)("inlineCode",{parentName:"p"},"Context")," of the request. This means your server will need a way to determine the location of each end user. For example, your server may perform an IP-to-Geo lookup, using a service you configure. Some hosting providers, such as Google Cloud, provide this functionality via custom headers in each ",(0,o.mdx)("inlineCode",{parentName:"p"},"HttpServletRequest"),"."),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Node.js")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre"},'const CONFIG = {\n    client: "acmeclient",\n    organizationId: "1234567890@AdobeOrg",\n    decisioningMethod: "on-device"\n};\n\nconst targetClient = TargetClient.create(CONFIG);\n\ntargetClient.getOffers({\n    request: {\n        context: {\n            geo: {\n                city: "SAN FRANCISCO",\n                countryCode: "US",\n                stateCode: "CA",\n                latitude: 37.75,\n                longitude: -122.4\n            }\n        },\n        execute: {\n            pageLoad: {}\n        }\n    }\n})\n')),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Java")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre"},"public class TargetRequestUtils {\n\n    public static Context getContext(HttpServletRequest request) {\n        Context context = new Context()\n            .geo(ipToGeoLookup(request.getRemoteAddr()))\n            .channel(ChannelType.WEB)\n            .timeOffsetInMinutes(330.0)\n            .address(getAddress(request));\n        return context;\n    }\n\n    public static Geo ipToGeoLookup(String ip) {\n        GeoResult geoResult = geoLookupService.lookup(ip);\n        return new Geo()\n            .city(geoResult.getCity())\n            .stateCode(geoResult.getStateCode())\n            .countryCode(geoResult.getCountryCode());\n    }\n\n}\n")),(0,o.mdx)("p",null,"However, if you do not have the ability to perform IP-to-Geo lookups on your server, but you still want to perform on-device decisioning for ",(0,o.mdx)("inlineCode",{parentName:"p"},"getOffers")," requests that contain geo-based audiences, this is also supported. The downside of this approach is that it will use a remote IP-to-Geo lookup, which will add latency to each ",(0,o.mdx)("inlineCode",{parentName:"p"},"getOffers")," call. This latency should be lower than a remote ",(0,o.mdx)("inlineCode",{parentName:"p"},"getOffers")," call, since it hits a CDN that is located close to your server. You must only provide the ",(0,o.mdx)("inlineCode",{parentName:"p"},"ipAddress")," field in the ",(0,o.mdx)("inlineCode",{parentName:"p"},"Geo")," object in the ",(0,o.mdx)("inlineCode",{parentName:"p"},"Context")," of your request, in order for the SDK to retrieve the geo-location of your user's IP address. If any other field in addition to the ",(0,o.mdx)("inlineCode",{parentName:"p"},"ipAddress")," is provided, the Target SDK will not fetch the geo-location metadata for resolution."),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Node.js")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre"},'const CONFIG = {\n    client: "acmeclient",\n    organizationId: "1234567890@AdobeOrg",\n    decisioningMethod: "on-device"\n};\n\nconst targetClient = TargetClient.create(CONFIG);\n\ntargetClient.getOffers({\n    request: {\n        context: {\n            geo: {\n                ipAddress: "127.0.0.1"\n            }\n        },\n        execute: {\n            pageLoad: {}\n        }\n    }\n})\n')),(0,o.mdx)("p",null,(0,o.mdx)("strong",{parentName:"p"},"Java")),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre"},"public class TargetRequestUtils {\n\n    public static Context getContext(HttpServletRequest request) {\n        Context context = new Context()\n            .geo(new Geo().ipAddress(request.getRemoteAddr()))\n            .channel(ChannelType.WEB)\n            .timeOffsetInMinutes(330.0)\n            .address(getAddress(request));\n        return context;\n    }\n\n}\n")))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-sdk-supported-features-audience-targeting-md-60e3c38245e53731822a.js.map